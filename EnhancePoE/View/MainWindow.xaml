<Window x:Class="EnhancePoE.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:EnhancePoE"
		xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
		xmlns:properties="clr-namespace:EnhancePoE.Properties"
		xmlns:storage="clr-namespace:EnhancePoE.Model.Storage"
		mc:Ignorable="d"
		FontSize="14"
		Title="Chaos Recipe Enhancer Settings"
		FontFamily="Segoe UI Light"
		SizeToContent="WidthAndHeight"
		WindowStyle="SingleBorderWindow"
		MouseDown="Window_MouseDown"
		ResizeMode="CanMinimize"
		Left="{Binding Source={x:Static properties:Settings.Default}, Path=LeftMain, Mode=TwoWay}"
		Top="{Binding Source={x:Static properties:Settings.Default}, Path=TopMain, Mode=TwoWay}">
	<Border BorderBrush="DarkGray"
			BorderThickness="1">
		<Grid Name="MainGrid"
			  MinHeight="500"
			  MinWidth="1143"
			  Focusable="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="20" />
				<ColumnDefinition Width="1*" />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="20"></RowDefinition>
				<RowDefinition Height="auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="auto" />

			</Grid.RowDefinitions>
			<TabControl Grid.Column="1"
						Grid.Row="1">
				<TabItem Header="General">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="10" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="10" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="1" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="10" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<!-- POE SETTINGS -->
						<Grid Grid.Column="1"
							  Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="5"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   Grid.ColumnSpan="2"
									   Text="Path of Exile"
									   FontSize="24"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Account Name:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The name of your account" />
							<TextBox x:Name="accountName"
									 Grid.Column="3"
									 Grid.Row="3"
									 Width="200"
									 Text="{Binding Source={x:Static properties:Settings.Default}, Path=accName, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="PoE Session ID:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="PoE Session ID. Visit https://github.com/kosace/EnhancePoEApp for more information." />
							<TextBox x:Name="sessionId"
									 Grid.Column="3"
									 Grid.Row="5"
									 Width="200"
									 FontFamily="{StaticResource PasswordFont}"
									 Text="{Binding Source={x:Static properties:Settings.Default}, Path=SessionId, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="League:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The league you are playing in." />
							<TextBox x:Name="League"
									 Grid.Column="3"
									 Grid.Row="7"
									 Width="200"
									 Text="{Binding Source={x:Static properties:Settings.Default}, Path=League, Mode=TwoWay}" />
						</Grid>
						<!-- RECIPES -->
						<Grid Grid.Column="1"
							  Grid.Row="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   VerticalAlignment="Center"
									   Grid.ColumnSpan="2"
									   Text="Recipes"
									   FontSize="24"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Chaos Orb Recipe:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Activates Chaos Recipe. Mutually exclusiv to Regal Recipe." />
							<CheckBox x:Name="ChaosRecipeCheckBox"
									  Grid.Column="3"
									  Grid.Row="3"
									  VerticalAlignment="Center"
									  Checked="ChaosRecipeCheckBox_Checked"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ChaosRecipe, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Regal Recipe:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Activates Regal Recipe. Mutually exclusive to Chaos Recipe." />
							<CheckBox x:Name="RegalRecipeCheckBox"
									  Grid.Column="3"
									  Grid.Row="5"
									  VerticalAlignment="Center"
									  Checked="RegalRecipeCheckBox_Checked"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=RegalRecipe, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="Exalted Shard Recipe:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Activates Exalted Shard Recipe. Not fully functional at the moment. Visit github for more information." />
							<CheckBox x:Name="ExaltedRecipeCheckBox"
									  Grid.Column="3"
									  Grid.Row="7"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ExaltedRecipe, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="9"
									   VerticalAlignment="Center"
									   Text="Fill Greedy Mode:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Sets will be filled with more than 1 low ilvl item. Deactivate to only allow 1 low ilvl item." />
							<CheckBox x:Name="LimitChaosCheckBox"
									  Grid.Column="3"
									  Grid.Row="9"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=FillWithChaos, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="11"
									   VerticalAlignment="Center"
									   Text="Include Identified Items:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Also counts identified Items for 1 chaos per set." />
							<CheckBox x:Name="IncludeIdentifiedCheckBox"
									  Grid.Column="3"
									  Grid.Row="11"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=IncludeIdentified, Mode=TwoWay}" />
						</Grid>
                        <!-- SOUND -->
                        <Grid Grid.Column="3"
							  Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="5"></RowDefinition>
                                <RowDefinition Height="25"></RowDefinition>
                                <RowDefinition Height="5"></RowDefinition>
                                <RowDefinition Height="25"></RowDefinition>
                                <RowDefinition Height="5"></RowDefinition>
                                <RowDefinition Height="25"></RowDefinition>
                                <RowDefinition Height="10"></RowDefinition>
                                <RowDefinition Height="25"></RowDefinition>
                                <RowDefinition Height="5"></RowDefinition>
                                <RowDefinition Height="25"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="1"
									   Grid.Row="1"
									   VerticalAlignment="Center"
									   Grid.ColumnSpan="2"
									   Text="Sound"
									   FontSize="24"
									   FontWeight="Bold" />
                            <TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Notification Sound:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Plays a sound everytime you have to refresh your lootfilter." />
                            <CheckBox x:Name="PlaySoundCheckBox"
									  Grid.Column="3"
									  Grid.Row="3"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=Sound, Mode=TwoWay}" />
                            <TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Sound Volume:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Sound Volume" />
                            <Slider x:Name="VolumeSlider"
									Width="200"
									Grid.Column="3"
									Grid.Row="5"
									VerticalAlignment="Center"
									Minimum="0"
									Maximum="100"
									AutoToolTipPlacement="TopLeft"
									IsMoveToPointEnabled="True"
									AutoToolTipPrecision="0"
									PreviewMouseUp="VolumeSlider_PreviewMouseUp"
									Value="{Binding Source={x:Static properties:Settings.Default}, Path=Volume, Mode=TwoWay}" />
                            <TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="Lootfilter Sound:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The location of your Lootfilte sound mp3 file (*.mp3). If you don't choose a file the default sound will be used" />
                            <Button Grid.Column="3"
									Grid.Row="7"
									x:Name="FilterSoundLocationDialog"
									Width="200"
									Click="FilterSoundLocationDialog_OnClick"
                                    ToolTipService.InitialShowDelay="50"
									ToolTip="{Binding Source={x:Static properties:Settings.Default}, Path=FilterChangeSoundFileLocation, Mode=TwoWay}"
									Content="{Binding Source={x:Static properties:Settings.Default}, Path=FilterChangeSoundFileLocation, Mode=TwoWay}"
									HorizontalContentAlignment="Left">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background"
												Value="Transparent" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
													 Value="True">
                                                <Setter Property="Background"
														Value="Transparent" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <TextBlock Grid.Column="1"
                                       Grid.Row="9"
                                       VerticalAlignment="Center"
                                       Text="Item Set Sound:"
                                       ToolTipService.InitialShowDelay="50"
                                       ToolTip="The location of your Item Set Sound mp3 file (*.mp3). If you don't choose a file the default sound will be used" />
                            <Button Grid.Column="3"
                                    Grid.Row="9"
                                    x:Name="ItemPickupLocationDialog"
                                    Width="200"
									Click="ItemPickupLocationDialog_OnClick"
                                    ToolTipService.InitialShowDelay="50"
                                    ToolTip="{Binding Source={x:Static properties:Settings.Default}, Path=ItemPickupSoundFileLocation, Mode=TwoWay}"
                                    Content="{Binding Source={x:Static properties:Settings.Default}, Path=ItemPickupSoundFileLocation, Mode=TwoWay}"
                                    HorizontalContentAlignment="Left">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background"
                                                Value="Transparent" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="Transparent" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                        <!-- HOTKEYS -->
						<Grid Grid.Column="3"
							  Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   VerticalAlignment="Center"
									   Grid.ColumnSpan="2"
									   Text="Hotkeys"
									   FontSize="24"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Toggle Overlay:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Hotkey for showing/ hiding the overlay. While stopped there will be no requests to the server."></TextBlock>
							<Button x:Name="CustomHotkeyToggle"
									Width="200"
									Grid.Row="3"
									Grid.Column="3"
									IsManipulationEnabled="False"
									Focusable="False"
									Content="{Binding Source={x:Static properties:Settings.Default}, Path=HotkeyToggle, Mode=TwoWay, TargetNullValue=&lt; not set &gt;}"
									Click="CustomHotkeyToggle_Click">
								<Button.Style>
									<Style TargetType="Button">
										<Setter Property="Background"
												Value="Transparent" />
										<Style.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Background"
														Value="Transparent" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</Button.Style>
							</Button>
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Toggle Fetching:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Hotkey for starting/ stopping refreshing data." />
							<Button x:Name="RefreshHotkey"
									Width="200"
									Grid.Row="5"
									Grid.Column="3"
									IsManipulationEnabled="False"
									Focusable="False"
									Content="{Binding Source={x:Static properties:Settings.Default}, Path=HotkeyRefresh, Mode=TwoWay, TargetNullValue=&lt; not set &gt;}"
									Click="RefreshHotkey_Click">
								<Button.Style>
									<Style TargetType="Button">
										<Setter Property="Background"
												Value="Transparent" />
										<Style.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Background"
														Value="Transparent" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</Button.Style>
							</Button>
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="Toggle StashTab:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Hotkey for showing/ hiding the stashtabs overlay." />
							<Button x:Name="StashTabHotkey"
									Width="200"
									Grid.Row="7"
									Grid.Column="3"
									IsManipulationEnabled="False"
									Focusable="False"
									Content="{Binding Source={x:Static properties:Settings.Default}, Path=HotkeyStashTab, Mode=TwoWay, TargetNullValue=&lt; not set &gt;}"
									Click="StashTabHotkey_Click">
								<Button.Style>
									<Style TargetType="Button">
										<Setter Property="Background"
												Value="Transparent" />
										<Style.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Background"
														Value="Transparent" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</Button.Style>
							</Button>
						</Grid>
						<!-- GENERAL -->
						<Grid Grid.Column="2"
							  Grid.Row="1"
							  Grid.RowSpan="3">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   VerticalAlignment="Center"
									   Grid.ColumnSpan="2"
									   Text="General"
									   FontSize="24"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Full Set Threshold:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Number of full sets you want. If you have collected this amount of items of an itemtype, itemtype will get deactivated. Leave at 0 for auto calculation, that means 4 sets for each normal tab and 16 sets for each quad tab.  " />
							<TextBox x:Name="Sets"
									 Grid.Column="3"
									 Grid.Row="3"
									 Width="200"
									 Text="{Binding Source={x:Static properties:Settings.Default}, Path=Sets, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Stashtab Mode:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The stashtab fetching mode. Stashtabs will automatically be added." />
							<ComboBox Grid.Column="3"
									  Grid.Row="5"
									  Width="200"
									  VerticalContentAlignment="Center"
									  SelectionChanged="ComboBox_SelectionChanged"
									  SelectedIndex="{Binding Source={x:Static properties:Settings.Default}, Path=StashtabMode, Mode=TwoWay}">
								<ComboBoxItem Content="ID"></ComboBoxItem>
								<ComboBoxItem Content="Prefix"></ComboBoxItem>
							</ComboBox>
							<TextBlock Name="StashTabNameTextBlock"
									   Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="StashTab Prefix:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Every stashtab which name starts with this prefix will be added."
									   Visibility="{Binding NameVisible}" />
							<TextBox Name="StashTabNameTextBox"
									 Grid.Column="3"
									 Grid.Row="7"
									 Width="200"
									 Visibility="{Binding NameVisible}"
									 Text="{Binding Source={x:Static properties:Settings.Default}, Path=StashTabName, Mode=TwoWay}" />
							<TextBlock Name="StashTabIndicesTextBlock"
									   Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="StashTab Indices:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Every stashtab with this indices will be added. Seperate them by ',' e.g. '0,1,2,3,4,5' will fetch first 6 stashtabs."
									   Visibility="{Binding IndicesVisible}" />
							<TextBox Name="StashTabIndicesTextBox"
									 Grid.Column="3"
									 Grid.Row="7"
									 Width="200"
									 Visibility="{Binding IndicesVisible}"
									 Text="{Binding Source={x:Static properties:Settings.Default}, Path=StashTabIndices, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="9"
									   VerticalAlignment="Center"
									   Text="Fetch on new Map:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Automatically fetches when you join a new Zone (Hideout excluded). REOPEN the overlay to take effect." />
							<CheckBox x:Name="AutoFetchCheckBox"
									  Grid.Column="3"
									  Grid.Row="9"
									  VerticalAlignment="Center"
									  Checked="AutoFetchCheckBox_Checked"
									  Unchecked="AutoFetchCheckBox_Unchecked"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=AutoFetch, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="11"
									   VerticalAlignment="Center"
									   Text="Log File Location:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The location of you PoE log file (Client.txt). The standard path is: C:/Programs/Grinding Gear Games/Path of Exile/logs/Client.txt." />
							<Button Grid.Column="3"
									Grid.Row="11"
									x:Name="LogLocationDialog"
									Width="200"
									Click="LogLocationDialog_Click"
									ToolTipService.InitialShowDelay="50"
									ToolTip="{Binding Source={x:Static properties:Settings.Default}, Path=LogLocation, Mode=TwoWay}"
									Content="{Binding Source={x:Static properties:Settings.Default}, Path=LogLocation, Mode=TwoWay}"
									HorizontalContentAlignment="Left">
								<Button.Style>
									<Style TargetType="Button">
										<Setter Property="Background"
												Value="Transparent" />
										<Style.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Background"
														Value="Transparent" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</Button.Style>
							</Button>
							<TextBlock Grid.Column="1"
									   Grid.Row="13"
									   VerticalAlignment="Center"
									   Text="Language:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Fetch on new Map only works in the correct language. Set it to the same as your PoE client." />
							<ComboBox Grid.Column="3"
									  Grid.Row="13"
									  Width="200"
									  VerticalContentAlignment="Center"
									  Name="LanguageComboBox"
									  SelectedIndex="{Binding Source={x:Static properties:Settings.Default}, Path=Language, Mode=TwoWay}">
								<ComboBoxItem Content="English"></ComboBoxItem>
								<ComboBoxItem Content="French"></ComboBoxItem>
								<ComboBoxItem Content="German"></ComboBoxItem>
								<ComboBoxItem Content="Portuguese"></ComboBoxItem>
								<ComboBoxItem Content="Russian"></ComboBoxItem>
								<ComboBoxItem Content="Spanish"></ComboBoxItem>
								<ComboBoxItem Content="Chinese"></ComboBoxItem>
							</ComboBox>
                            <TextBlock Grid.Column="1"
                                       Grid.Row="15"
                                       VerticalAlignment="Center"
                                       Text="Close to Tray:"
                                       ToolTipService.InitialShowDelay="50"
                                       ToolTip="Minimizes to Tray when closing the application." />
							<CheckBox x:Name="hideOnClose"
									  Grid.Column="3"
									  Grid.Row="15"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=hideOnClose, Mode=TwoWay}" />
                            <TextBlock Grid.Column="1"
									   Grid.Row="17"
									   VerticalAlignment="Center"
									   Text="Influenced Set Threshold"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Same as 'Full Set Threshold' but for Exalted Shard Receipe only. Set the threshold at 1 when checked. " />
                            <CheckBox x:Name="ExaltSets"
									 Grid.Column="3"
									 Grid.Row="17"
									 Width="200"
									 IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ExaltedSets, Mode=TwoWay}" />                            
                        </Grid>
					</Grid>
				</TabItem>
				<!-- OVERLAYS -->
				<TabItem Header="Overlays">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="10" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="10" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="1" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="10" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<!-- Main Overlay -->
						<Grid Grid.Column="1"
							  Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   Grid.ColumnSpan="2"
									   Text="Main Overlay"
									   FontSize="24"
									   VerticalAlignment="Center"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Opacity Overlay:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The background opacity of the overlay from 0 (0%) to 1 (100%)." />
							<Slider x:Name="OpacityOverlay"
									Width="200"
									Grid.Column="3"
									Grid.Row="5"
									VerticalAlignment="Center"
									Minimum="0.01"
									Maximum="1"
									AutoToolTipPlacement="TopLeft"
									IsMoveToPointEnabled="True"
									AutoToolTipPrecision="2"
									Value="{Binding Source={x:Static properties:Settings.Default}, Path=Opacity, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="Show Item Amounts:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Shows little numbers in your itemtypes in the Main Overlay." />
							<ComboBox Grid.Column="3"
									  Grid.Row="7"
									  Width="200"
									  VerticalContentAlignment="Center"
									  Name="ShowNumbersComboBox"
									  SelectionChanged="ShowNumbersComboBox_SelectionChanged"
									  SelectedIndex="{Binding Source={x:Static properties:Settings.Default}, Path=ShowItemAmount, Mode=TwoWay}">
								<ComboBoxItem Content="None"></ComboBoxItem>
								<ComboBoxItem Content="Total Items"></ComboBoxItem>
								<ComboBoxItem Content="Items Missing"></ComboBoxItem>
							</ComboBox>
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Overlay Mode:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The design of the Main Overlay." />
							<ComboBox Grid.Column="3"
									  Grid.Row="3"
									  Width="200"
									  VerticalContentAlignment="Center"
									  Name="OverlayModeComboBox"
									  SelectionChanged="OverlayModeComboBox_SelectionChanged"
									  SelectedIndex="{Binding Source={x:Static properties:Settings.Default}, Path=OverlayMode, Mode=TwoWay}">
								<ComboBoxItem Content="Standard"></ComboBoxItem>
								<ComboBoxItem Content="Minified"></ComboBoxItem>
								<ComboBoxItem Content="Only Buttons"></ComboBoxItem>
							</ComboBox>
							<TextBlock Grid.Column="1"
									   Grid.Row="9"
									   VerticalAlignment="Center"
									   Text="Lock Position:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Locks the position of the main overlay in one place." />
							<CheckBox x:Name="LockOverlayCheckBox"
									  Grid.Column="3"
									  Grid.Row="9"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=LockOverlayPosition, Mode=TwoWay}" />
						</Grid>
						<!-- Stashtab Overlay   -->
						<Grid Grid.Column="2"
							  Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   Grid.ColumnSpan="2"
									   Text="Stashtab Overlay"
									   FontSize="24"
									   VerticalAlignment="Center"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Opacity StashTab Overlay:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The background opacity of the stashtabs overlay from 0 (0%) to 1 (100%)." />
							<Slider x:Name="OpacityStashTab"
									Grid.Column="3"
									Grid.Row="3"
									Width="200"
									VerticalAlignment="Center"
									Minimum="0.01"
									Maximum="1"
									AutoToolTipPlacement="TopLeft"
									IsMoveToPointEnabled="True"
									AutoToolTipPrecision="2"
									Value="{Binding Source={x:Static properties:Settings.Default}, Path=OpacityStashTab, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Stashtab Background Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of the background of the Stashtab Overlay. Make this opaque if you want." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="5"
											  Width="200"
											  Name="ColorStashBackgroundPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorStashBackgroundPicker_SelectedColorChanged"></xctk:ColorPicker>
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="Highlight Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color that highlights the items in your stashtab overlay." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="7"
											  Width="200"
											  Name="ColorStashPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorStashPicker_SelectedColorChanged"></xctk:ColorPicker>
							<TextBlock Grid.Column="1"
									   Grid.Row="9"
									   VerticalAlignment="Center"
									   Text="Highlight Mode:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Item by Item: highlights each item after another. &#x0a;Set by Set: highlights a full set at once, each after another. &#x0a;All Items: highlights all items at once." />
							<ComboBox Grid.Column="3"
									  Grid.Row="9"
									  Name="HighlightModeComboBox"
									  Width="200"
									  VerticalContentAlignment="Center"
									  SelectedIndex="{Binding Source={x:Static properties:Settings.Default}, Path=HighlightMode, Mode=TwoWay}">
								<ComboBoxItem Content="Item by Item"></ComboBoxItem>
								<ComboBoxItem Content="Set by Set"></ComboBoxItem>
								<ComboBoxItem Content="All Items"></ComboBoxItem>
							</ComboBox>
							<TextBlock Grid.Column="1"
									   Grid.Row="11"
									   VerticalAlignment="Center"
									   Text="Tab Header Margin:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The starting margin of the tab headers in the Stashtab Overlay." />
							<Slider Grid.Column="3"
									Grid.Row="11"
									Name="TabHeaderMarginSlider"
									Width="200"
									VerticalAlignment="Center"
									Minimum="0"
									Maximum="500"
									AutoToolTipPlacement="TopLeft"
									IsMoveToPointEnabled="True"
									AutoToolTipPrecision="1"
									ValueChanged="TabHeaderMarginSlider_ValueChanged"
									Value="{Binding Source={x:Static properties:Settings.Default}, Path=TabMargin, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="13"
									   VerticalAlignment="Center"
									   Text="Tab Header Width:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The width of the tab headers in Stashtab Overlay." />
							<Slider Grid.Column="3"
									Grid.Row="13"
									Name="TabHeaderWidthSlider"
									Width="200"
									VerticalAlignment="Center"
									Minimum="0"
									Maximum="50"
									AutoToolTipPlacement="TopLeft"
									IsMoveToPointEnabled="True"
									AutoToolTipPrecision="1"
									ValueChanged="TabHeaderWidthSlider_ValueChanged"
									Value="{Binding Source={x:Static properties:Settings.Default}, Path=TabHeaderWidth, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="15"
									   VerticalAlignment="Center"
									   Text="Tab Header Gap:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The gap between tab headers in the Stashtab Overlay." />
							<Slider Grid.Column="3"
									Grid.Row="15"
									Name="TabHeaderGapSlider"
									Width="200"
									VerticalAlignment="Center"
									Minimum="0"
									Maximum="20"
									AutoToolTipPlacement="TopLeft"
									IsMoveToPointEnabled="True"
									AutoToolTipPrecision="1"
									ValueChanged="TabHeaderGapSlider_ValueChanged"
									Value="{Binding Source={x:Static properties:Settings.Default}, Path=TabHeaderGap, Mode=TwoWay}" />
						</Grid>
					</Grid>
				</TabItem>
				<!-- LOOTFILTER -->
				<TabItem Header="Lootfilter">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="10" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="10" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="1" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="10" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<!-- GENERAL -->
						<Grid Grid.Column="1"
							  Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   Grid.ColumnSpan="2"
									   Text="General"
									   FontSize="24"
									   VerticalAlignment="Center"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Lootfilter Manipulation:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Activates manipulation of lootfilter. When active your lootfilter gets rewritten as soon as an itemtype changes." />
							<CheckBox Grid.Column="3"
									  Grid.Row="3"
									  x:Name="LootfilterActiveCheckbox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=LootfilterActive, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Online Filter:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Activates working with on-line filters." />
							<CheckBox Grid.Column="3"
									  Grid.Row="5"
									  x:Name="LootfilterOnlineCheckbox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=LootfilterOnline, Mode=TwoWay}"
									  Checked="LootfilterOnlineCheckbox_Checked"
									  Unchecked="LootfilterOnlineCheckbox_Checked" />
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="Lootfilter Location:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The path to your lootfilter. Standard path is: 'Username/Documents/My Games/Path of Exile'."
									   Visibility="{Binding LootfilterFileDialogVisible}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Name of filter to control. Can be found by the link. You should be signed in."
									   Visibility="{Binding LootfilterOnlineFilterNameVisible}">
								Filter Name (<Hyperlink NavigateUri="{x:Static storage:OnlineFilterStorage.FiltersUrl}"
														RequestNavigate="Hyperlink_RequestNavigateByAccName">here</Hyperlink>):</TextBlock>
							<TextBox x:Name="LootfilterOnlineFilterName"
									 Grid.Column="3"
									 Grid.Row="7"
									 Width="200"
									 Text="{Binding Source={x:Static properties:Settings.Default}, Path=LootfilterOnlineName, Mode=TwoWay}"
									 Visibility="{Binding LootfilterOnlineFilterNameVisible}" />
							<Button Grid.Column="3"
									Grid.Row="7"
									x:Name="LootfilterFileDialog"
									Width="200"
									Click="LootfilterFileDialog_Click"
									ToolTipService.InitialShowDelay="50"
									ToolTip="{Binding Source={x:Static properties:Settings.Default}, Path=LootfilterLocation, Mode=TwoWay}"
									Content="{Binding Source={x:Static properties:Settings.Default}, Path=LootfilterLocation, Mode=TwoWay}"
									HorizontalContentAlignment="Left"
									Visibility="{Binding LootfilterFileDialogVisible}">
								<Button.Style>
									<Style TargetType="Button">
										<Setter Property="Background"
												Value="Transparent" />
										<Style.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Background"
														Value="Transparent" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</Button.Style>
							</Button>
							<TextBlock Grid.Column="1"
									   Grid.Row="9"
									   VerticalAlignment="Center"
									   Text="Show Icon on Map:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="Activates icons on the minimap." />
							<CheckBox Grid.Column="3"
									  Grid.Row="9"
									  x:Name="LootfilterIconsCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=LootfilterIcons, Mode=TwoWay}" />
						</Grid>
						<!-- COLORS -->
						<Grid Grid.Column="2"
							  Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   Grid.ColumnSpan="2"
									   Text="Colors"
									   FontSize="24"
									   VerticalAlignment="Center"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   Text="Ring Color:"
									   VerticalAlignment="Center"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of rings. This color will also be written into your lootfilter if you activated Lootfilter Manipulation.." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="3"
											  Width="200"
											  Name="ColorRingPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorRingPicker_SelectedColorChanged"></xctk:ColorPicker>
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Amulet Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of amulets. This color will also be written into your lootfilter if you activated Lootfilter Manipulation.." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="5"
											  Width="200"
											  Name="ColorAmuletPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorAmuletPicker_SelectedColorChanged" />
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="Belt Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of belts. This color will also be written into your lootfilter if you activated Lootfilter Manipulation.." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="7"
											  Width="200"
											  Name="ColorBeltPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorBeltPicker_SelectedColorChanged"></xctk:ColorPicker>
							<TextBlock Grid.Column="1"
									   Grid.Row="9"
									   VerticalAlignment="Center"
									   Text="Boots Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of boots. This color will also be written into your lootfilter if you activated Lootfilter Manipulation." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="9"
											  Width="200"
											  Name="ColorBootsPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorBootsPicker_SelectedColorChanged"></xctk:ColorPicker>
							<TextBlock Grid.Column="1"
									   Grid.Row="11"
									   VerticalAlignment="Center"
									   Text="Gloves Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of gloves. This color will also be written into your lootfilter if you activated Lootfilter Manipulation." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="11"
											  Width="200"
											  Name="ColorGlovesPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorGlovesPicker_SelectedColorChanged"></xctk:ColorPicker>
							<TextBlock Grid.Column="1"
									   Grid.Row="13"
									   VerticalAlignment="Center"
									   Text="Helmet Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of helmets. This color will also be written into your lootfilter if you activated Lootfilter Manipulation." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="13"
											  Width="200"
											  Name="ColorHelmetPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorHelmetPicker_SelectedColorChanged"></xctk:ColorPicker>
							<TextBlock Grid.Column="1"
									   Grid.Row="15"
									   VerticalAlignment="Center"
									   Text="Body Armour Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of body armours. This color will also be written into your lootfilter if you activated Lootfilter Manipulation.." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="15"
											  Width="200"
											  Name="ColorChestPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorChestPicker_SelectedColorChanged"></xctk:ColorPicker>
							<TextBlock Grid.Column="1"
									   Grid.Row="17"
									   VerticalAlignment="Center"
									   Text="Weapons Color:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="The color of weapons. This color will also be written into your lootfilter if you activated Lootfilter Manipulation.." />
							<xctk:ColorPicker Grid.Column="3"
											  Grid.Row="17"
											  Width="200"
											  Name="ColorWeaponsPicker"
											  ColorMode="ColorCanvas"
											  SelectedColorChanged="ColorWeaponsPicker_SelectedColorChanged"></xctk:ColorPicker>
						</Grid>
						<!-- COLORS -->
						<Grid Grid.Column="3"
							  Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
								<ColumnDefinition Width="*"></ColumnDefinition>
								<ColumnDefinition Width="10"></ColumnDefinition>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="10"></RowDefinition>
								<RowDefinition Height="30"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="5"></RowDefinition>
								<RowDefinition Height="25"></RowDefinition>
								<RowDefinition Height="10"></RowDefinition>
							</Grid.RowDefinitions>
							<TextBlock Grid.Column="1"
									   Grid.Row="1"
									   Grid.ColumnSpan="2"
									   Text="Always Active"
									   FontSize="24"
									   VerticalAlignment="Center"
									   FontWeight="Bold" />
							<TextBlock Grid.Column="1"
									   Grid.Row="3"
									   VerticalAlignment="Center"
									   Text="Rings:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="." />
							<CheckBox Grid.Column="3"
									  Grid.Row="3"
									  Width="200"
									  x:Name="RingsAlwaysActiveCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=RingsAlwaysActive, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="5"
									   VerticalAlignment="Center"
									   Text="Amulets:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="." />
							<CheckBox Grid.Column="3"
									  Grid.Row="5"
									  Width="200"
									  x:Name="AmuletsAlwaysActiveCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=AmuletsAlwaysActive, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="7"
									   VerticalAlignment="Center"
									   Text="Belts:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="." />
							<CheckBox Grid.Column="3"
									  Grid.Row="7"
									  Width="200"
									  x:Name="BeltsAlwaysActiveCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=BeltsAlwaysActive, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="9"
									   VerticalAlignment="Center"
									   Text="Boots:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="." />
							<CheckBox Grid.Column="3"
									  Grid.Row="9"
									  Width="200"
									  x:Name="BootsAlwaysActiveCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=BootsAlwaysActive, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="11"
									   VerticalAlignment="Center"
									   Text="Gloves:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="." />
							<CheckBox Grid.Column="3"
									  Grid.Row="11"
									  Width="200"
									  x:Name="GlovesAlwaysActiveCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=GlovesAlwaysActive, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="13"
									   VerticalAlignment="Center"
									   Text="Helmets:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="." />
							<CheckBox Grid.Column="3"
									  Grid.Row="13"
									  Width="200"
									  x:Name="HelmetsAlwaysActiveCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=HelmetsAlwaysActive, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="15"
									   VerticalAlignment="Center"
									   Text="Body Armours:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="." />
							<CheckBox Grid.Column="3"
									  Grid.Row="15"
									  Width="200"
									  x:Name="ChestsAlwaysActiveCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ChestsAlwaysActive, Mode=TwoWay}" />
							<TextBlock Grid.Column="1"
									   Grid.Row="17"
									   VerticalAlignment="Center"
									   Text="Weapons:"
									   ToolTipService.InitialShowDelay="50"
									   ToolTip="." />
							<CheckBox Grid.Column="3"
									  Grid.Row="17"
									  Width="200"
									  x:Name="WeaponsAlwaysActiveCheckBox"
									  VerticalAlignment="Center"
									  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=WeaponsAlwaysActive, Mode=TwoWay}" />
						</Grid>
					</Grid>
				</TabItem>
			</TabControl>
			<Grid Grid.Column="1"
				  Grid.Row="2">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="20"></ColumnDefinition>
					<ColumnDefinition Width="1*"></ColumnDefinition>
					<ColumnDefinition Width="1*"></ColumnDefinition>
					<ColumnDefinition Width="1*"></ColumnDefinition>
					<ColumnDefinition Width="20"></ColumnDefinition>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="20" />
					<RowDefinition Height="*" />
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>
				<TextBlock Grid.Column="2"
						   Grid.Row="3"
						   Margin="0,10,0,10"
						   FontSize="12"
						   VerticalAlignment="Center"
						   TextAlignment="Center"
						   Text="Chaos Recipe Enhancer ">
					<TextBlock.Inlines>
						<Run FontFamily="Segoe UI"
							 FontSize="12"
							 Text="by kosace " />
					</TextBlock.Inlines></TextBlock>
				<TextBlock 
					Grid.Column="1"
					Grid.Row="3"
					FontSize="10"
					VerticalAlignment="Center"
					TextAlignment="Center"
					Text="This product isn't affiliated with or endorsed by Grinding Gear Games in any way."
				/>
				<!--
			<Button x:Name="SaveButton"
					Click="SaveButton_Click"
					Content="Save Settings"
					Grid.Column="1"
					Grid.Row="7" />
					-->
				<Button x:Name="RunButton"
						Click="RunButton_Click"
						Content="Run Overlay"
						Grid.Column="3"
						Grid.Row="2" />
				<Button x:Name="SaveButton"
						Click="SaveButton_Click_1"
						Content="Save Settings"
						Grid.Column="1"
						Grid.Row="2" />
				<Button x:Name="ResetButton"
						Click="ResetButton_Click"
						Width="100"
						Content="Reset Settings"
						Grid.Column="2"
						Grid.Row="2" />
				<TextBlock Grid.Column="3"
						   Grid.Row="3"
						   Text="{Binding AppVersionText}"
						   FontSize="12"
						   HorizontalAlignment="Right"
						   VerticalAlignment="Center"></TextBlock>
			</Grid>
		</Grid>
	</Border>
</Window>
